#DB Properties
spring:
  jmx:
    enabled: false
  datasource:
    hikari:
      pool-name: educ-grad-batch-graduation-api-cp
      maximum-pool-size: ${MAXIMUM_POOL_SIZE}
      max-lifetime: ${MAX_LIFETIME}
    url: ${CONNECTION_STRING}
    username: ${USERNAME}
    password: ${PASSWORD}
  jpa:
    show-sql: ${SHOW_SQL_LOGS}
    database-platform: org.hibernate.dialect.OracleDialect
    hibernate:
      ddl-auto: none
  mvc:
    log-request-details: ${SPRING_SHOW_REQUEST_DETAILS}
  jackson:
    deserialization:
      fail-on-unknown-properties: false
  #Keycloak/OAuth properties
  security:
    user:
      name: ${API_USERNAME}
      password: ${API_PASSWORD}
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${TOKEN_ISSUER_URL}
          jwk-set-uri: ${TOKEN_ISSUER_URL}/protocol/openid-connect/certs
      client:
        registration:
          batch-client:
            client-id: ${GRAD_CLIENT_NAME}
            client-secret: ${GRAD_CLIENT_SECRET}
            authorization-grant-type: client_credentials
        provider:
          batch-client:
            issuer-uri: ${TOKEN_ISSUER_URL}
            token-uri: ${TOKEN_ISSUER_URL}/protocol/openid-connect/token
  batch:
    job:
      enabled: false
    jdbc:
      initialize-schema: NEVER
      isolation-level-for-create: READ_COMMITTED
  flyway:
    enabled: ${ENABLE_FLYWAY}
    baseline-on-migrate: false
    table: FLYWAY_SCHEMA_HISTORY
    url: ${CONNECTION_STRING}
    schema: ${USERNAME}
    user: ${USERNAME}
    password: ${PASSWORD}
    location: classpath:db/migration

#Logging properties
logging:
  file:
    name: /logs/app.log
  logback:
    rollingpolicy:
      max-history: 1
      max-file-size: 20MB
      clean-history-on-start: true
  pattern:
    file: '{"time_stamp":"%d{yyyy-MM-dd HH:mm:ss.SSS}","level":"%3p" ,"thread":"%t" ,"class":"%logger{36}","msg":"%replace(%msg){"[\n\r\"]",""}", "exception":"%replace(%rEx{10}){"[\n\r\"]",""}","http_event":%X{httpEvent:-""},"message_event":%X{messageEvent:-""}}%nopex%n'
    console: "%d{yyyy-MM-dd HH:mm:ss.SSS} [%5p] [%t] [%logger{36}] [%replace(%msg){'[\n\r\"]',''} %X{httpEvent} %X{messageEvent}] %replace(%rEx{10}){'[\n\r\"]',''}%nopex%n"
  level:
    ca:
      bc:
        gov:
          educ:
            api:
              batchgraduation: ${APP_LOG_LEVEL}
    org:
      springframework:
        web: ${SPRING_WEB_LOG_LEVEL}
        security: ${SPRING_SECURITY_LOG_LEVEL}
        boot:
          autoconfigure:
            logging: ${SPRING_BOOT_AUTOCONFIG_LOG_LEVEL}
    com:
      zaxxer:
        hikari: ERROR

#Local properties
server:
  undertow:
    threads:
      worker: 128
      io: 16
  #port: ${HTTP_PORT}
  max-http-request-header-size: 20000
  compression:
    enabled: ${ENABLE_COMPRESSION}
    mime-types: application/json,application/xml,text/html,text/xml,text/plain,text/css,text/javascript,application/javascript
    min-response-size: 2048
    excluded-user-agents: MSIE 6.0,UCBrowser

#API Documentation
springdoc:
  api-docs:
    path: /api/v1/api-docs
  swagger-ui:
    path: /api/v1/api-docs-ui.html
    operationsSorter: alpha

authorization:
  user: ${GRAD_CLIENT_NAME}
  password: ${GRAD_CLIENT_SECRET}

batch:
  transaction:
    chunk-size: ${TRANSACTION_CHUNK_SIZE}
  partitions:
    number: ${NUMBER_OF_PARTITIONS}
  regalg:
    cron: ${REG_ALG_CRON}
  tvrrun:
    cron: ${TVR_RUN_CRON}
  distrun:
    cron: ${DIST_RUN_CRON}
  token-expiry:
    offset: ${TOKEN_EXPIRY_OFFSET}
  user:
    scheduled:
      jobs:
        lockAtLeastFor: ${CRON_USER_SCHEDULED_JOBS_LOCK_AT_LEAST_FOR}
        lockAtMostFor: ${CRON_USER_SCHEDULED_JOBS_LOCK_AT_MOST_FOR}
  system:
    scheduled:
      routines:
        lockAtLeastFor: ${CRON_SYSTEM_SCHEDULED_ROUTINES_LOCK_AT_LEAST_FOR}
        lockAtMostFor: ${CRON_SYSTEM_SCHEDULED_ROUTINES_LOCK_AT_MOST_FOR}
  purge-old-records:
    cron: ${CRON_SCHEDULED_PURGE_OLD_RECORDS}
    staleInDays: ${RECORDS_STALE_IN_DAYS}

#Resilience
resilience:
  retry:
    default:
      maxAttempts: ${MAX_RETRY_ATTEMPTS}
      waitDuration: 2
    get-token:
      maxAttempts: 5
      waitDuration: 2

#Endpoints
endpoint:
  keycloak:
    getToken: ${KEYCLOAK_TOKEN_URL}auth/realms/master/protocol/openid-connect/token
  grad-graduation-api:
    graduatestudent:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/studentid/%s/run/GS?batchId=%s
    reportonlyrun:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/studentid/%s/run/FMR?batchId=%s
    tvrrun:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/studentid/%s/run/REGFM?batchId=%s
    schoolreport:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/report/school?type=%s
    school_year_end_report:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/report/schoolyearend
    school_month_report:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/report/schoolmonth
    district_year_end_report:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/report/districtyearend
    district_month_report:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/report/districtmonth
    school_district_year_end_report:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/report/schooldistrictyearend
    school_district_month_report:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/report/schooldistrictmonth
    student-certificate-regeneration:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/report/certificate/%s
    student-data-yearly:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/report/studentsforyearend
    snapshot-graduation-status-for-edw:
      url: ${GRAD_GRADUATION_API}api/v1/graduate/edw/snapshot
  grad-student-api:
    get-students-count: ${GRAD_STUDENT_API}api/v1/student/count?studentStatus=%S
    archive-students: ${GRAD_STUDENT_API}api/v1/student/archive?batchId=%s&studentStatus=%S&userName=%s
    grad-status: ${GRAD_STUDENT_API}api/v1/student/studentid/%s
    student-for-grad-list: ${GRAD_STUDENT_API}api/v1/student/recalculate
    student-for-projectedgrad-list: ${GRAD_STUDENT_API}api/v1/student/projected
    get-student-for-batch-input: ${GRAD_STUDENT_API}api/v1/student/batch/gradstudent/studentid/%s
    pen-student-by-pen: ${PEN_API}api/v1/student?pen=%s
    student-for-special-grad-run-list: ${GRAD_STUDENT_API}api/v1/student/studentlistsearch
    student-by-search-criteria: ${GRAD_STUDENT_API}api/v1/student/gradstudentbysearchcriteria
    get-student-data-list: ${GRAD_STUDENT_API}api/v1/student/multistudentids
    get-student-record: ${GRAD_STUDENT_API}api/v1/student/grad/%s
    update-student-record: ${GRAD_STUDENT_API}api/v1/student/distribution/studentid/%s?batchId=%s&activityCode=%s
    update-student-record-history: ${GRAD_STUDENT_API}api/v1/student/distribution/batchid/%s?userName=%s&activityCode=%s
    read-grad-student-record: ${GRAD_STUDENT_API}api/v1/student/studentid/%s/algorithm
    read-grad-student-record-batch: ${GRAD_STUDENT_API}api/v1/student/batch/%s
    update-flag-ready-for-batch: ${GRAD_STUDENT_API}api/v1/student/multistudentids/batchflag/jobtype/%s
    read-student-data-nongrad-yearly: ${GRAD_STUDENT_API}api/v1/student/studentnongradreportdata
    get-student-data-nongrad-yearly: ${GRAD_STUDENT_API}api/v1/student/studentnongradreportdata/%s
    get-school-data-nongrad-yearly: ${GRAD_STUDENT_API}api/v1/student/schoolnongradreportdata
    get-district-data-nongrad-yearly: ${GRAD_STUDENT_API}api/v1/student/districtnongradreportdata
    get-deceased-student-id-list: ${GRAD_STUDENT_API}api/v1/student/deceasedstudentid
  grad-graduation-report-api:
    get-school-reports-count:
      url: ${GRAD_GRADUATION_REPORT_API}api/v2/graduationreports/count?reportType=%s
    get-student-reports-guid:
      url: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/studentreportsbystudentid?reportType=%s&rowCount=%s
    archive-school-reports:
      url: ${GRAD_GRADUATION_REPORT_API}api/v2/graduationreports/archive?batchId=%s&reportType=%s
    get-transcript-list:
      yearly:
        url: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/gettranscriptsfordistributionyearly
      url: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/gettranscriptsfordistribution
    get-certificate-list:
      url: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/getcertificatesfordistribution
    update-student-credential:
      url: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/studentcredential?studentID=%s&credentialTypeCode=%s&paperType=%s&documentStatusCode=%s&activityCode=%s
    update-student-credential-by-batch:
      url: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/studentcredential?activityCode=%s
    user-req-dis-run:
      url: ${GRAD_GRADUATION_REPORT_API}api/v2/graduationreports/userrequest/%s
    user-req-dis-run-for-not-yet-distributed:
      url: ${GRAD_GRADUATION_REPORT_API}api/v2/graduationreports/userrequest/notyetdistributed/%s
    get-district-data-yearly:
      url: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/districtdataearly
    get-certificate-types:
      url: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/certificatetype/%s
    get-school-reports-lite-by-report-type:
      url: ${GRAD_GRADUATION_REPORT_API}api/v2/graduationreports/schoolreports/search?reportTypeCode=%s&isLight=true
    delete-school-report:
      url: ${GRAD_GRADUATION_REPORT_API}api/v2/graduationreports/schoolreports/%s/%s
    delete-school-report-by-report-type-only:
      url: ${GRAD_GRADUATION_REPORT_API}api/v2/graduationreports/schoolreports?reportTypeCode=%s
    delete-district-report:
      url: ${GRAD_GRADUATION_REPORT_API}api/v2/graduationreports/district-report/%s/%s
    delete-district-report-by-report-type-only:
      url: ${GRAD_GRADUATION_REPORT_API}api/v2/graduationreports/district-report?reportTypeCode=%s
    update-student-report:
      url: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/studentreports?reportTypeCode=%s
    delete-student-report:
      url: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/delete?batchId=%s&reportType=%s
    check-sccp-certificate-exists: ${GRAD_GRADUATION_REPORT_API}api/v1/graduationreports/check-sccp-certificate-exists
  grad-distribution-api:
    merge-n-upload:
      url: ${GRAD_DISTRIBUTION_API}api/v1/distribute/run/MER?batchId=%s&activityCode=%s&localDownload=%s
    merge-n-upload-yearly:
      url: ${GRAD_DISTRIBUTION_API}api/v1/distribute/run/MERYER?batchId=%s&activityCode=%s
    merge-n-upload-supplemental:
      url: ${GRAD_DISTRIBUTION_API}api/v1/distribute/run/MERSUPP?batchId=%s&activityCode=%s
    reprint-n-upload:
      url: ${GRAD_DISTRIBUTION_API}api/v1/distribute/run/RPR?batchId=%s&activityCode=%s&localDownload=%s
    blanks-n-upload:
      url: ${GRAD_DISTRIBUTION_API}api/v1/distribute/run/BCPR?batchId=%s&localDownload=%s
    posting-distribution:
      url: ${GRAD_DISTRIBUTION_API}api/v1/distribute/zipandupload
    read-n-post:
      url: ${GRAD_DISTRIBUTION_API}api/v1/distribute/run/PSR?batchId=%s
    merge-psi-n-upload:
      url: ${GRAD_DISTRIBUTION_API}api/v1/distribute/run/PSPR?batchId=%s&localDownload=%s&transmissionType=%s
  grad-trax-api:
    get-psi-student-list:
      url: ${GRAD_TRAX_API}api/v1/trax/psi/student?transmissionMode=%s&psiCode=%s&psiYear=%s
    school-clob-by-school-id:
      url: ${GRAD_TRAX_API}api/v2/trax/school-clob/%s
    search-school-clob-by-min-code:
      url: ${GRAD_TRAX_API}api/v2/trax/school-clob/search?mincode=%s
    school-by-school-id:
      url: ${GRAD_TRAX_API}api/v2/trax/school/%s
    search-schools-by-district-id:
      url: ${GRAD_TRAX_API}api/v2/trax/school/search?districtId=%s
    search-schools-by-district-number:
      url: ${GRAD_TRAX_API}api/v2/trax/school/search?distNo=%s
    district-by-school-category:
      url: ${GRAD_TRAX_API}api/v2/trax/district/schoolCategories?schoolCategoryCode=%s
    school-by-school-category:
      url: ${GRAD_TRAX_API}api/v2/trax/school/schoolCategories?schoolCategoryCode=%s
    get-edw-snapshot-schools:
      url: ${GRAD_TRAX_API}api/v1/trax/edw/get-schools/snapshot/%s
    get-edw-snapshot-students-by-min-code:
      url: ${GRAD_TRAX_API}api/v1/trax/edw/get-students/snapshot/%s/%s


#Splunk LogHelper
splunk:
  log-helper:
    enabled: ${ENABLE_SPLUNK_LOG_HELPER}
